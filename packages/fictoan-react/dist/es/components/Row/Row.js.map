{"version":3,"file":"Row.js","sources":["../../../../src/components/Row/Row.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../Element/Element\";\nimport { CommonAndHTMLProps, SpacingTypes } from \"../Element/constants\";\n\nimport { RowStyled } from \"./Row.styled\";\n\n// prettier-ignore\nexport interface RowCustomProps {\n    sidePadding                    ? : \"nano\" | \"micro\" | \"tiny\" | \"small\" | \"medium\" | \"large\" | \"huge\";\n    gutters                        ? : SpacingTypes;\n    retainLayoutOnTabletLandscape  ? : boolean;\n    retainLayoutOnTabletPortrait   ? : boolean;\n    retainLayoutOnMobile           ? : boolean;\n    retainLayoutAlways             ? : boolean;\n}\n\nexport type RowElementType = HTMLDivElement;\nexport type RowProps = Omit<CommonAndHTMLProps<RowElementType>, keyof RowCustomProps> & RowCustomProps;\n\nexport const Row = React.forwardRef(\n    (\n        {\n            sidePadding,\n            gutters = \"medium\",\n            retainLayoutOnTabletLandscape,\n            retainLayoutOnTabletPortrait,\n            retainLayoutOnMobile,\n            retainLayoutAlways,\n            ...props\n        }: RowProps,\n        ref: React.Ref<RowElementType>\n    ) => {\n        let classNames = [];\n\n        if (sidePadding) {\n            classNames.push(`side-padding-${sidePadding}`);\n        }\n\n        if (gutters) {\n            classNames.push(gutters === \"none\" ? \"no-gutters\" : `${gutters}-gutters`);\n        }\n\n        if (retainLayoutOnTabletLandscape) {\n            classNames.push(\"retain-layout-on-tablet-landscape\");\n        }\n\n        if (retainLayoutOnTabletPortrait) {\n            classNames.push(\"retain-layout-on-tablet-portrait\");\n        }\n\n        if (retainLayoutOnMobile) {\n            classNames.push(\"retain-layout-on-mobile\");\n        }\n\n        if (retainLayoutAlways) {\n            classNames.push(\n                \"retain-layout-on-tablet-landscape retain-layout-on-tablet-portrait retain-layout-on-mobile\"\n            );\n        }\n\n        return (\n            <Element<RowElementType>\n                as={RowStyled}\n                ref={ref}\n                classNames={classNames}\n                marginBottom=\"tiny\"\n                isFullWidth\n                {...props}\n            />\n        );\n    }\n);\n"],"names":["Row","React","forwardRef","_a","ref","sidePadding","gutters","retainLayoutOnTabletLandscape","retainLayoutOnTabletPortrait","retainLayoutOnMobile","retainLayoutAlways","props","__rest","classNames","push","createElement","Element","Object","assign","as","RowStyled","marginBottom","isFullWidth"],"mappings":"qLAoBO,MAAMA,eAAMC,EAAMC,YACrB,CACIC,EASAC,KATA,IAAAC,YACIA,EAAWC,QACXA,EAAU,SAAQC,8BAClBA,EAA6BC,6BAC7BA,EAA4BC,qBAC5BA,EAAoBC,mBACpBA,GAAkBP,EACfQ,EAAKC,EAAAT,EAPZ,sIAWA,IAAIU,EAAa,GA4BjB,OA1BIR,GACAQ,EAAWC,qBAAqBT,KAGhCC,GACAO,EAAWC,KAAiB,SAAZR,EAAqB,gBAAkBA,aAGvDC,GACAM,EAAWC,KAAK,qCAGhBN,GACAK,EAAWC,KAAK,oCAGhBL,GACAI,EAAWC,KAAK,2BAGhBJ,GACAG,EAAWC,KACP,2GAKJb,EAACc,cAAAC,EACGC,OAAAC,OAAA,CAAAC,GAAIC,EACJhB,IAAKA,EACLS,WAAYA,EACZQ,aAAa,OACbC,aACI,GAAAX,GACN"}