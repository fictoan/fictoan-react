{"version":3,"file":"InfoPanel.js","sources":["../../../../src/hooks/UseClickOutside.ts","../../../../src/components/InfoPanel/InfoPanel.tsx"],"sourcesContent":["import { useEffect } from \"react\";\n\nexport const useClickOutside = (ref: any, handler: any) => {\n    useEffect(() => {\n        const listener = (event: Event) => {\n            if (!ref.current || ref.current.contains(event.target)) {\n                return;\n            }\n            handler(event);\n        };\n\n        document.addEventListener(\"mousedown\", listener);\n        document.addEventListener(\"touchstart\", listener);\n        return () => {\n            document.removeEventListener(\"mousedown\", listener);\n            document.removeEventListener(\"touchstart\", listener);\n        };\n    }, [ref, handler]);\n};\n","import React from \"react\";\n\nimport { Element } from \"../Element\";\nimport { CommonAndHTMLProps } from \"../Element/constants\";\nimport { useClickOutside } from \"../../hooks/UseClickOutside\";\n\nimport { InfoPanelStyled } from \"./InfoPanel.styled\";\n\n// prettier-ignore\nexport interface InfoPanelCustomProps {\n    width               ? : \"tiny\" | \"small\" | \"medium\" | \"large\" | \"huge\";\n    isOpen              ? : boolean;\n    onCloseCallback     ? : () => void;\n    closeOnClickOutside ? : boolean;\n}\n\nexport type InfoPanelElementType = HTMLDivElement;\nexport type InfoPanelProps = Omit<CommonAndHTMLProps<InfoPanelElementType>, keyof InfoPanelCustomProps> &\n    InfoPanelCustomProps;\n\nexport const InfoPanel = React.forwardRef(\n    (\n        { width = \"medium\", isOpen, children, onCloseCallback, closeOnClickOutside, padding, ...props }: InfoPanelProps,\n        ref: React.Ref<InfoPanelElementType>\n    ) => {\n        let classNames = [];\n        const infoPanelRef = React.useRef<InfoPanelElementType>(null);\n\n        if (width) {\n            classNames.push(width);\n        }\n\n        if (isOpen) {\n            classNames.push(\"open\");\n        }\n\n        const closeInfoPanel = () => {\n            if (onCloseCallback) {\n                onCloseCallback();\n            }\n        };\n        useClickOutside(ref ?? infoPanelRef, () => {\n            if (closeOnClickOutside) closeInfoPanel();\n        });\n\n        return (\n            !!isOpen && (\n                <Element<InfoPanelElementType>\n                    as={InfoPanelStyled}\n                    ref={ref ?? infoPanelRef}\n                    classNames={classNames}\n                    padding={padding ?? \"tiny\"}\n                    {...props}\n                >\n                    <Element as=\"div\" className=\"dismiss-button\" onClick={closeInfoPanel} role=\"button\" />\n                    <Element as=\"div\" className=\"info-panel-content-wrapper\">\n                        {children}\n                    </Element>\n                </Element>\n            )\n        );\n    }\n);\n"],"names":["InfoPanel","React","forwardRef","_a","ref","width","isOpen","children","onCloseCallback","closeOnClickOutside","padding","props","__rest","classNames","infoPanelRef","useRef","push","closeInfoPanel","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","useClickOutside","createElement","Element","Object","assign","as","InfoPanelStyled","className","onClick","role"],"mappings":"4KAEO,MCkBMA,eAAYC,EAAMC,YAC3B,CACIC,EACAC,KADA,IAAAC,MAAEA,EAAQ,SAAQC,OAAEA,EAAMC,SAAEA,EAAQC,gBAAEA,EAAeC,oBAAEA,EAAmBC,QAAEA,GAAOP,EAAKQ,EAAKC,EAAAT,EAA7F,iFAGA,IAAIU,EAAa,GACjB,MAAMC,EAAeb,EAAMc,OAA6B,MAEpDV,GACAQ,EAAWG,KAAKX,GAGhBC,GACAO,EAAWG,KAAK,QAGpB,MAAMC,EAAiB,KACfT,GACAA,GACH,EAML,MD3CuB,EAACJ,EAAUc,KACtCC,GAAU,KACN,MAAMC,EAAYC,IACTjB,EAAIkB,UAAWlB,EAAIkB,QAAQC,SAASF,EAAMG,SAG/CN,EAAQG,EAAM,EAKlB,OAFAI,SAASC,iBAAiB,YAAaN,GACvCK,SAASC,iBAAiB,aAAcN,GACjC,KACHK,SAASE,oBAAoB,YAAaP,GAC1CK,SAASE,oBAAoB,aAAcP,EAAS,CACvD,GACF,CAAChB,EAAKc,GAAS,ECwBdU,CAAgBxB,QAAAA,EAAOU,GAAc,KAC7BL,GAAqBQ,GAAgB,MAIvCX,gBACEL,EAAC4B,cAAAC,EACGC,OAAAC,OAAA,CAAAC,GAAIC,EACJ9B,IAAKA,QAAAA,EAAOU,EACZD,WAAYA,EACZH,QAASA,QAAAA,EAAW,QAChBC,gBAEJV,EAAA4B,cAACC,EAAQ,CAAAG,GAAG,MAAME,UAAU,iBAAiBC,QAASnB,EAAgBoB,KAAK,wBAC3EpC,EAAA4B,cAACC,EAAO,CAACG,GAAG,MAAME,UAAU,8BACvB5B,GAGZ"}