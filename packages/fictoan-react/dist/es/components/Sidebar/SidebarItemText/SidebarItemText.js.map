{"version":3,"file":"SidebarItemText.js","sources":["../../../../../src/components/Sidebar/SidebarItemText/SidebarItemText.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../../Element/Element\";\nimport { CommonAndHTMLProps } from \"../../Element/constants\";\n\nimport { SidebarItemTextStyled } from \"../SidebarItemText/SidebarItemText.styled\";\n\n// prettier-ignore\nexport interface SidebarItemTextCustomProps {\n    linkText  : string;\n    weight  ? : \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\n    size    ? : \"tiny\" | \"small\" | \"medium\" | \"large\" | \"huge\";\n}\n\nexport type SidebarItemTextElementType = HTMLParagraphElement;\nexport type SidebarItemTextProps = Omit<\n    CommonAndHTMLProps<SidebarItemTextElementType>,\n    keyof SidebarItemTextCustomProps\n> &\n    SidebarItemTextCustomProps;\n\nexport const SidebarItemText = React.forwardRef(\n    ({ linkText, weight, size, ...props }: SidebarItemTextProps, ref: React.Ref<SidebarItemTextElementType>) => {\n        let classNames = [];\n\n        if (weight) {\n            classNames.push(`weight-${weight}`);\n        }\n\n        if (size) {\n            classNames.push(`text-${size}`);\n        }\n\n        return (\n            <Element<SidebarItemTextElementType>\n                as={SidebarItemTextStyled}\n                ref={ref}\n                classNames={classNames}\n                {...props}\n            >\n                {linkText}\n            </Element>\n        );\n    }\n);\n"],"names":["SidebarItemText","React","forwardRef","_a","ref","linkText","weight","size","props","__rest","classNames","push","Element","Object","assign","as","SidebarItemTextStyled"],"mappings":"2KAqBO,MAAMA,eAAkBC,EAAMC,YACjC,CAACC,EAA4DC,SAA5DC,SAAEA,EAAQC,OAAEA,EAAMC,KAAEA,KAASC,EAA7BC,EAAAN,EAAA,CAAA,WAAA,SAAA,SACG,IAAIO,EAAa,GAUjB,OARIJ,GACAI,EAAWC,eAAeL,KAG1BC,GACAG,EAAWC,aAAaJ,kBAIxBN,gBAACW,EAAOC,OAAAC,OAAA,CACJC,GAAIC,EACJZ,IAAKA,EACLM,WAAYA,GACRF,GAEHH,EACK"}