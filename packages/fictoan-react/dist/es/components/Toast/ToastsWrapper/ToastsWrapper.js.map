{"version":3,"file":"ToastsWrapper.js","sources":["../../../../../src/components/Toast/ToastsWrapper/ToastsWrapper.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../../Element/Element\";\nimport { CommonAndHTMLProps } from \"../../Element/constants\";\n\nimport { ToastsWrapperStyled } from \"./ToastsWrapper.styled\";\n\n// prettier-ignore\nexport interface NotificationsWrapperCustomProps {\n    position ? : \"top\" | \"bottom\";\n}\n\nexport type NotificationsWrapperElementType = HTMLDivElement;\nexport type NotificationsWrapperProps = CommonAndHTMLProps<NotificationsWrapperElementType> &\n    NotificationsWrapperCustomProps;\n\nexport const ToastsWrapper = React.forwardRef(\n    ({ position, ...props }: NotificationsWrapperProps, ref: React.Ref<NotificationsWrapperElementType>) => {\n        let classNames = [];\n\n        if (position) {\n            classNames.push(position);\n        }\n\n        return (\n            <Element<NotificationsWrapperElementType>\n                as={ToastsWrapperStyled}\n                ref={ref}\n                classNames={classNames}\n                {...props}\n            />\n        );\n    }\n);\n"],"names":["ToastsWrapper","React","forwardRef","_a","ref","position","props","__rest","classNames","push","createElement","Element","as","ToastsWrapperStyled"],"mappings":"2kBAgBO,MAAMA,eAAgBC,EAAMC,YAC/B,CAACC,EAAmDC,KAAnD,IAAAC,SAAEA,GAA+CF,EAAlCG,EAAKC,EAAAJ,EAApB,cACG,IAAIK,EAAa,GAMjB,OAJIH,GACAG,EAAWC,KAAKJ,gBAIhBJ,EAACS,cAAAC,iBACGC,GAAIC,EACJT,IAAKA,EACLI,WAAYA,GACRF,GACN"}