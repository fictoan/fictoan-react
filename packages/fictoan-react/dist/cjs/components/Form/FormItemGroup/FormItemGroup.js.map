{"version":3,"file":"FormItemGroup.js","sources":["../../../../../src/components/Form/FormItemGroup/FormItemGroup.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../../Element/Element\";\nimport { CommonAndHTMLProps } from \"../../Element/constants\";\n\nimport { FormItemGroupStyled } from \"./FormItemGroup.styled\";\n\n// prettier-ignore\nexport interface FormItemGroupCustomProps {\n    isJoint      ? : boolean;\n    retainLayout ? : boolean;\n    spacing      ? : string;\n}\n\nexport type FormItemGroupElementType = HTMLDivElement;\nexport type FormItemGroupProps = Omit<CommonAndHTMLProps<FormItemGroupElementType>, keyof FormItemGroupCustomProps> &\n    FormItemGroupCustomProps;\n\nexport const FormItemGroup = React.forwardRef(\n    (\n        { isJoint, retainLayout, spacing = \"medium\", children, ...props }: FormItemGroupProps,\n        ref: React.Ref<FormItemGroupElementType>\n    ) => {\n        let classNames = [];\n\n        if (isJoint) {\n            classNames.push(\"is-joint\");\n        }\n\n        if (retainLayout) {\n            classNames.push(\"retain-layout\");\n        }\n\n        if (spacing) {\n            classNames.push(`spacing-${spacing}`);\n        }\n\n        return (\n            <Element<FormItemGroupElementType> as={FormItemGroupStyled} ref={ref} classNames={classNames} {...props}>\n                {children}\n            </Element>\n        );\n    }\n);\n"],"names":["FormItemGroup","React","forwardRef","_a","ref","isJoint","retainLayout","spacing","children","props","__rest","classNames","push","Element","Object","assign","as","FormItemGroupStyled"],"mappings":"siBAkBO,MAAMA,EAAgBC,EAAAA,QAAMC,YAC/B,CACIC,EACAC,KADA,IAAAC,QAAEA,EAAOC,aAAEA,EAAYC,QAAEA,EAAU,SAAQC,SAAEA,GAAwCL,EAA3BM,EAAKC,EAAAA,OAAAP,EAA/D,iDAGA,IAAIQ,EAAa,GAcjB,OAZIN,GACAM,EAAWC,KAAK,YAGhBN,GACAK,EAAWC,KAAK,iBAGhBL,GACAI,EAAWC,gBAAgBL,KAI3BN,EAAAA,sBAACY,EAAAA,QAAOC,OAAAC,OAAA,CAA2BC,GAAIC,EAAAA,oBAAqBb,IAAKA,EAAKO,WAAYA,GAAgBF,GAC7FD,EACK"}