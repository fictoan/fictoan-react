{"version":3,"file":"Text.js","sources":["../../../../src/components/Typography/Text.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { Element } from \"../Element\";\nimport { CommonAndHTMLProps, SpacingTypes, WeightTypes } from \"../Element/constants\";\n\n// prettier-ignore\nexport interface TextCustomProps {\n    style     ? : \"sans-serif\" | \"serif\" | \"monospace\";\n    weight    ? : WeightTypes;\n    isSubtext ? : boolean;\n    size      ? : SpacingTypes;\n    align     ? : \"left\" | \"centre\" | \"center\" | \"right\";\n}\n\nexport type TextElementType = HTMLParagraphElement;\nexport type TextProps = Omit<CommonAndHTMLProps<TextElementType>, keyof TextCustomProps> & TextCustomProps;\n\nexport const Text = React.forwardRef(\n    ({ weight, size, style = \"sans-serif\", align, isSubtext, ...props }: TextProps, ref: React.Ref<TextElementType>) => {\n        let classNames = [];\n\n        if (weight) {\n            classNames.push(`weight-${weight}`);\n        }\n\n        if (size) {\n            classNames.push(`text-${size}`);\n        }\n\n        if (style) {\n            classNames.push(`font-${style}`);\n        }\n\n        if (isSubtext) {\n            classNames.push(\"sub-text\");\n        }\n\n        if (align) {\n            classNames.push(`text-${align}`);\n        }\n\n        return <Element<TextElementType> as=\"p\" ref={ref} classNames={classNames} {...props} />;\n    }\n);\n"],"names":["Text","React","forwardRef","_a","ref","weight","size","style","align","isSubtext","props","__rest","classNames","push","Element","Object","assign","as"],"mappings":"8NAiBO,MAAMA,EAAOC,EAAAA,QAAMC,YACtB,CAACC,EAA+EC,KAA/E,IAAAC,OAAEA,EAAMC,KAAEA,EAAIC,MAAEA,EAAQ,aAAYC,MAAEA,EAAKC,UAAEA,GAAgCN,EAAlBO,EAAKC,SAAAR,EAAhE,+CACG,IAAIS,EAAa,GAsBjB,OApBIP,GACAO,EAAWC,eAAeR,KAG1BC,GACAM,EAAWC,aAAaP,KAGxBC,GACAK,EAAWC,aAAaN,KAGxBE,GACAG,EAAWC,KAAK,YAGhBL,GACAI,EAAWC,aAAaL,KAGrBP,EAAAA,sBAACa,EAAAA,QAAOC,OAAAC,OAAA,CAAkBC,GAAG,IAAIb,IAAKA,EAAKQ,WAAYA,GAAgBF,GAAS"}